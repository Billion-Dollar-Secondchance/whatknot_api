"""add single_vibe_matched_pairs table

Revision ID: b26f8546f7f8
Revises: b0359355ff7a
Create Date: 2025-05-20 23:01:55.189271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b26f8546f7f8'
down_revision: Union[str, None] = 'b0359355ff7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('single_vibe_matched_pairs',
    sa.Column('single_vibe_match_id', sa.String(), nullable=False),
    sa.Column('user_1_id', sa.String(), nullable=True),
    sa.Column('user_2_id', sa.String(), nullable=True),
    sa.Column('prompt_schedule_id', sa.String(), nullable=True),
    sa.Column('matched_on', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['prompt_schedule_id'], ['single_vibe_prompt_schedule.prompt_schedule_id'], ),
    sa.ForeignKeyConstraint(['user_1_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['user_2_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('single_vibe_match_id'),
    sa.UniqueConstraint('user_1_id', 'user_2_id', 'prompt_schedule_id', name='uq_match_once_per_prompt')
    )
    op.create_index(op.f('ix_single_vibe_matched_pairs_single_vibe_match_id'), 'single_vibe_matched_pairs', ['single_vibe_match_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_single_vibe_matched_pairs_single_vibe_match_id'), table_name='single_vibe_matched_pairs')
    op.drop_table('single_vibe_matched_pairs')
    # ### end Alembic commands ###
