"""add single_vibe_pairing_prompt_status table

Revision ID: a195361a8c0e
Revises: b26f8546f7f8
Create Date: 2025-05-21 00:30:32.446166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a195361a8c0e'
down_revision: Union[str, None] = 'b26f8546f7f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('single_vibe_paired_users',
    sa.Column('pair_id', sa.String(), nullable=False),
    sa.Column('user_1_id', sa.String(), nullable=True),
    sa.Column('user_2_id', sa.String(), nullable=True),
    sa.Column('paired_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('pair_id')
    )
    op.create_table('single_vibe_pairing_prompt_status',
    sa.Column('pairing_prompt_id', sa.String(), nullable=False),
    sa.Column('user_1_id', sa.String(), nullable=True),
    sa.Column('user_2_id', sa.String(), nullable=True),
    sa.Column('match_count', sa.Integer(), nullable=True),
    sa.Column('last_matched_on', sa.Date(), nullable=True),
    sa.Column('prompted', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('pairing_prompt_id'),
    sa.UniqueConstraint('user_1_id', 'user_2_id', name='uq_pair_unique')
    )
    op.create_index(op.f('ix_single_vibe_pairing_prompt_status_pairing_prompt_id'), 'single_vibe_pairing_prompt_status', ['pairing_prompt_id'], unique=False)
    op.create_table('single_vibe_pair_requests',
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('sender_id', sa.String(), nullable=True),
    sa.Column('receiver_id', sa.String(), nullable=True),
    sa.Column('match_count', sa.Integer(), nullable=True),
    sa.Column('requested_on', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('single_vibe_pair_requests')
    op.drop_index(op.f('ix_single_vibe_pairing_prompt_status_pairing_prompt_id'), table_name='single_vibe_pairing_prompt_status')
    op.drop_table('single_vibe_pairing_prompt_status')
    op.drop_table('single_vibe_paired_users')
    # ### end Alembic commands ###
