"""create vibe match tables

Revision ID: 3b870100f5ab
Revises: d646301ab4f7
Create Date: 2025-05-11 00:33:19.333424

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b870100f5ab'
down_revision: Union[str, None] = 'd646301ab4f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vibe_matches',
    sa.Column('vibe_match_id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('num_questions', sa.Integer(), nullable=False),
    sa.Column('started_by', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('started', 'completed', name='vibe_match_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('vibe_match_id')
    )
    op.create_table('vibe_questions',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('question_type', sa.Enum('text', 'multiple_choice', name='vibe_question_type'), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('vibe_match_questions',
    sa.Column('vibe_id', sa.UUID(), nullable=False),
    sa.Column('vibe_match_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('order_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['vibe_questions.question_id'], ),
    sa.ForeignKeyConstraint(['vibe_match_id'], ['vibe_matches.vibe_match_id'], ),
    sa.PrimaryKeyConstraint('vibe_id')
    )
    op.create_table('vibe_match_responses',
    sa.Column('vibe_response_id', sa.UUID(), nullable=False),
    sa.Column('vibe_match_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['vibe_questions.question_id'], ),
    sa.ForeignKeyConstraint(['vibe_match_id'], ['vibe_matches.vibe_match_id'], ),
    sa.PrimaryKeyConstraint('vibe_response_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vibe_match_responses')
    op.drop_table('vibe_match_questions')
    op.drop_table('vibe_questions')
    op.drop_table('vibe_matches')
    # ### end Alembic commands ###
